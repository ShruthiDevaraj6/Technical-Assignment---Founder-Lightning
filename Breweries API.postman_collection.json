{
	"info": {
		"_postman_id": "90c960b3-70d6-4d8e-b673-491fd77e49ee",
		"name": "Breweries API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33803533"
	},
	"item": [
		{
			"name": "All breweries",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.openbrewerydb.org/v1/breweries",
					"protocol": "https",
					"host": [
						"api",
						"openbrewerydb",
						"org"
					],
					"path": [
						"v1",
						"breweries"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single Brewery",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"id\", \"5128df48-79fc-4f0f-8b52-d06be54d0cec\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body is not empty\", function () {\r",
							"    pm.response.to.not.be.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"Response body contains brewery data\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData).to.have.property('name');\r",
							"    pm.expect(jsonData).to.have.property('brewery_type');\r",
							"   \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.openbrewerydb.org/v1/breweries/{{id}}",
					"protocol": "https",
					"host": [
						"api",
						"openbrewerydb",
						"org"
					],
					"path": [
						"v1",
						"breweries",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Multiple Breweries by_ids",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Check specific brewery details\", function () {\r",
							"    var firstBrewery = jsonData[0];\r",
							"    pm.expect(firstBrewery.id).to.be.a('string');\r",
							"    pm.expect(firstBrewery.name).to.be.a('string');\r",
							"    pm.expect(firstBrewery.brewery_type).to.be.oneOf(['micro', 'nano', 'regional', 'brewpub', 'large', 'planning', 'bar', 'contract', 'proprietor']);\r",
							"    \r",
							"});\r",
							"\r",
							"//Negative test\r",
							"pm.test(\"Check specific brewery details\", function () {\r",
							"    var firstBrewery = jsonData[0];\r",
							"    pm.expect(firstBrewery.id).to.be.a('number');  \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"id1\", \"ef970757-fe42-416f-931d-722451f1f59c\");\r",
							"pm.globals.set(\"id2\", \"6d14b220-8926-4521-8d19-b98a2d6ec3db\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.openbrewerydb.org/v1/breweries?by_ids={{id1}},{{id2}}",
					"protocol": "https",
					"host": [
						"api",
						"openbrewerydb",
						"org"
					],
					"path": [
						"v1",
						"breweries"
					],
					"query": [
						{
							"key": "by_ids",
							"value": "{{id1}},{{id2}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "by_type",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"brewery_type\", \"type\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Breweries belong to the specified type\", function () {\r",
							"    // Parse the JSON response\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    // Define the expected brewery type\r",
							"    var expectedType = \"nano\";\r",
							"\r",
							"    // Loop through each brewery in the response\r",
							"    jsonData.forEach(function(brewery) {\r",
							"        // Assert that the type of each brewery matches the expected type\r",
							"        pm.expect(brewery.brewery_type).to.equal(expectedType);\r",
							"    });\r",
							"});\r",
							"\r",
							"//Negative test\r",
							"pm.test(\"Breweries belong to the specified type\", function () {\r",
							"    // Parse the JSON response\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    // Define the expected brewery type\r",
							"    var expectedType = \"micro\";\r",
							"\r",
							"    // Loop through each brewery in the response\r",
							"    jsonData.forEach(function(brewery) {\r",
							"        // Assert that the type of each brewery matches the expected type\r",
							"        pm.expect(brewery.brewery_type).to.equal(expectedType);\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.openbrewerydb.org/v1/breweries?by_type=nano",
					"protocol": "https",
					"host": [
						"api",
						"openbrewerydb",
						"org"
					],
					"path": [
						"v1",
						"breweries"
					],
					"query": [
						{
							"key": "by_type",
							"value": "nano"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Sort by state",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify sorting order\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    // Check if the response contains data\r",
							"    pm.expect(jsonData.length).to.be.above(0);\r",
							"\r",
							"    // Check sorting order\r",
							"    var sorted = true;\r",
							"    for (var i = 1; i < jsonData.length; i++) {\r",
							"        if (jsonData[i].type < jsonData[i - 1].type ||\r",
							"            (jsonData[i].type === jsonData[i - 1].type && jsonData[i].name < jsonData[i - 1].name)) {\r",
							"            sorted = false;\r",
							"            break;\r",
							"        }\r",
							"    }\r",
							"    pm.expect(sorted).to.be.true;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.openbrewerydb.org/v1/breweries?by_state=oregon&sort=type,name:asc",
					"protocol": "https",
					"host": [
						"api",
						"openbrewerydb",
						"org"
					],
					"path": [
						"v1",
						"breweries"
					],
					"query": [
						{
							"key": "by_state",
							"value": "oregon"
						},
						{
							"key": "sort",
							"value": "type,name:asc"
						}
					]
				}
			},
			"response": []
		}
	]
}